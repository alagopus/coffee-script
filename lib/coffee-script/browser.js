// Generated by CoffeeScript 1.5.0-pre
(function() {
  var CoffeeScript, runScripts;

  CoffeeScript = require('./coffee-script');

  CoffeeScript.require = require;

  CoffeeScript["eval"] = function(code, options) {
    var _ref;
    if (options == null) {
      options = {};
    }
    if ((_ref = options.bare) == null) {
      options.bare = true;
    }
    return eval(CoffeeScript.compile(code, options));
  };

  CoffeeScript.run = (function(){ var _fn = function _1run(code, options) {
    var _fn;
    if (options == null) {
      options = {};
    }
    options.bare = true;
    return Function(CoffeeScript.compile(code, options))();
  }; var _2run = null; return _fn})();

  if (typeof window === "undefined" || window === null) {
    return;
  }

  CoffeeScript.load = (function(){ var _fn = function _3load(url, callback) {
    var xhr, _fn;
    xhr = window.ActiveXObject ? new window.ActiveXObject('Microsoft.XMLHTTP') : new XMLHttpRequest();
    xhr.open('GET', url, true);
    if ('overrideMimeType' in xhr) {
      xhr.overrideMimeType('text/plain');
    }
    xhr.onreadystatechange = (function(){ var _fn1 = function _5onreadystatechange() {
      var _fn1, _ref;
      if (xhr.readyState === 4) {
        if ((_ref = xhr.status) === 0 || _ref === 200) {
          CoffeeScript.run(xhr.responseText);
        } else {
          throw new Error("Could not load " + url);
        }
        if (callback) {
          return callback();
        }
      }
    }; var _6onreadystatechange = null; return _fn1})();
    return xhr.send(null);
  }; var _4load = null; return _fn})();

  runScripts = (function(){ var _fn = function _7runScripts() {
    var coffees, execute, index, length, s, scripts, _fn;
    scripts = document.getElementsByTagName('script');
    coffees = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = scripts.length; _i < _len; _i++) {
        s = scripts[_i];
        if (s.type === 'text/coffeescript') {
          _results.push(s);
        }
      }
      return _results;
    })();
    index = 0;
    length = coffees.length;
    (execute = (function(){ var _fn1 = function _9execute() {
      var script, _fn1;
      script = coffees[index++];
      if ((script != null ? script.type : void 0) === 'text/coffeescript') {
        if (script.src) {
          return CoffeeScript.load(script.src, execute);
        } else {
          CoffeeScript.run(script.innerHTML);
          return execute();
        }
      }
    }; var _10execute = null; return _fn1})())();
    return null;
  }; var _8runScripts = null; return _fn})();

  if (window.addEventListener) {
    addEventListener('DOMContentLoaded', runScripts, false);
  } else {
    attachEvent('onload', runScripts);
  }

}).call(this);
